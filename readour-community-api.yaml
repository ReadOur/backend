openapi: 3.0.0
info:
  title: ReadOur API
  description: 커뮤니티 기반 독서 서비스의 REST API 명세
  version: 1.0.0
servers:
  - url: https://api.readour.com/api
tags:
  - name: users
    description: 회원 관리 API
  - name: community
    description: 커뮤니티 기능 (게시글, 댓글)
  - name: books
    description: 도서 및 서재 관리 API
  - name: calendar
    description: 캘린더 및 일정 관리 API

paths:
  /users:
    post:
      tags:
        - users
      summary: 회원가입
      description: 새로운 사용자를 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - nickname
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password1234
                nickname:
                  type: string
                  example: 독서광123
      responses:
        '201':
          description: 회원가입 성공
        '409':
          description: 이메일 또는 닉네임 중복

  /users/login:
    post:
      tags:
        - users
      summary: 로그인
      description: 사용자의 로그인을 처리하고 인증 토큰을 발급합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: 인증 실패

  /users/logout:
    delete:
      tags:
        - users
      summary: 로그아웃
      description: 사용자의 로그아웃을 처리하고 토큰을 무효화합니다.
      responses:
        '200':
          description: 로그아웃 성공
      security:
        - bearerAuth: []

  /users/me:
    patch:
      tags:
        - users
      summary: 프로필 수정
      description: 로그인한 사용자의 프로필 정보를 수정합니다.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                bio:
                  type: string
                profileImageUrl:
                  type: string
      responses:
        '200':
          description: 프로필 수정 성공
        '409':
          description: 닉네임 중복
      security:
        - bearerAuth: []

  /users/me/mypage:
    get:
      tags:
        - users
      summary: 마이페이지 조회
      description: 로그인한 사용자의 마이페이지 데이터를 조회합니다.
      responses:
        '200':
          description: 마이페이지 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/UserDto'
                  myPosts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostListDto'
                  myComments:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentDto'
                  myReviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookReviewDto'
                  myHighlights:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookHighlightDto'
                  likedPosts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostListDto'
      security:
        - bearerAuth: []

  /users/{userId}:
    get:
      tags:
        - users
      summary: 다른 사용자 프로필 조회
      description: 특정 사용자의 프로필 정보를 조회합니다.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 프로필 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    $ref: '#/components/schemas/UserDto'
                  myLibrary:
                    $ref: '#/components/schemas/LibraryDataDto'
        '404':
          description: 사용자 없음

  /community/posts:
    get:
      tags:
        - community
      summary: 게시글 목록 조회
      description: 게시글 목록을 조회합니다. 검색 및 필터링 기능을 포함합니다.
      parameters:
        - name: category
          in: query
          schema:
            type: string
            enum:
              - REVIEW
              - FREE
              - MEETING
        - name: query
          in: query
          schema:
            type: string
        - name: searchType
          in: query
          schema:
            type: string
            enum:
              - title
              - content
              - user
      responses:
        '200':
          description: 게시글 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostListDto'

    post:
      tags:
        - community
      summary: 게시글 작성
      description: 새 게시글을 작성합니다.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - content
                - category
              properties:
                title:
                  type: string
                content:
                  type: string
                category:
                  type: string
                  enum:
                    - REVIEW
                    - FREE
                    - MEETING
                isSpoiler:
                  type: boolean
                  default: false
                warnings:
                  type: array
                  items:
                    type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: 게시글 작성 성공
      security:
        - bearerAuth: []

  /community/posts/{postId}:
    get:
      tags:
        - community
      summary: 게시글 조회
      description: 특정 게시글의 상세 정보를 조회합니다.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 게시글 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    $ref: '#/components/schemas/PostDetailDto'
        '404':
          description: 게시글 없음

    put:
      tags:
        - community
      summary: 게시글 수정
      description: 게시글을 수정합니다.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                isSpoiler:
                  type: boolean
                warnings:
                  type: array
                  items:
                    type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: 게시글 수정 성공
        '403':
          description: 권한 없음
        '404':
          description: 게시글 없음
      security:
        - bearerAuth: []

    delete:
      tags:
        - community
      summary: 게시글 삭제
      description: 게시글을 삭제(소프트 삭제)합니다.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 게시글 삭제 성공
        '403':
          description: 권한 없음
        '404':
          description: 게시글 없음
      security:
        - bearerAuth: []

  /community/posts/{postId}/like:
    post:
      tags:
        - community
      summary: 게시글 좋아요
      description: 게시글에 좋아요를 추가하거나 취소합니다.
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 좋아요 처리 성공
      security:
        - bearerAuth: []

  /books:
    get:
      tags:
        - books
      summary: 책 검색
      description: 책 제목, 저자 등으로 책을 검색합니다.
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookListDto'
                  totalCount:
                    type: integer
                  currentPage:
                    type: integer

  /books/{bookId}:
    get:
      tags:
        - books
      summary: 책 상세 정보 조회
      description: 특정 책의 상세 정보와 관련 콘텐츠를 조회합니다.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 책 상세 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetailDto'

  /books/{bookId}/reviews:
    post:
      tags:
        - books
      summary: 책 리뷰 작성
      description: 책에 대한 한 줄 리뷰를 작성합니다.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookReviewRequestDto'
      responses:
        '201':
          description: 리뷰 작성 성공
        '409':
          description: 리뷰 중복

  /books/reviews/{reviewId}:
    delete:
      tags:
        - books
      summary: 책 리뷰 삭제
      description: 한 줄 리뷰를 삭제합니다.
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 리뷰 삭제 성공
        '403':
          description: 권한 없음
        '404':
          description: 리뷰 없음
      security:
        - bearerAuth: []

  /books/{bookId}/wishlist:
    post:
      tags:
        - books
      summary: 책 위시리스트 추가
      description: 책을 위시리스트에 추가합니다.
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: 위시리스트 추가 성공
      security:
        - bearerAuth: []

  /books/wishlist:
    get:
      tags:
        - books
      summary: 위시리스트 조회
      description: 사용자의 위시리스트 목록을 조회합니다.
      responses:
        '200':
          description: 위시리스트 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  wishlist:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookListDto'
      security:
        - bearerAuth: []

  /calendar:
    get:
      tags:
        - calendar
      summary: 캘린더 조회
      description: 사용자의 캘린더와 모든 일정을 조회합니다.
      responses:
        '200':
          description: 캘린더 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  calendarId:
                    type: integer
                    format: int64
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendarEventDto'
      security:
        - bearerAuth: []

  /calendar/events:
    post:
      tags:
        - calendar
      summary: 일정 추가
      description: 새로운 일정을 추가합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventRequestDto'
      responses:
        '201':
          description: 일정 추가 성공
      security:
        - bearerAuth: []

  /calendar/events/{eventId}:
    put:
      tags:
        - calendar
      summary: 일정 수정
      description: 일정을 수정합니다.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarEventRequestDto'
      responses:
        '200':
          description: 일정 수정 성공
        '403':
          description: 권한 없음
        '404':
          description: 일정 없음
      security:
        - bearerAuth: []

    delete:
      tags:
        - calendar
      summary: 일정 삭제
      description: 일정을 삭제합니다.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 일정 삭제 성공
        '403':
          description: 권한 없음
        '404':
          description: 일정 없음
      security:
        - bearerAuth: []

components:
  schemas:
    UserDto:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
        nickname:
          type: string
        profileImageUrl:
          type: string
        bio:
          type: string
    LibraryDataDto:
      type: object
      properties:
        wishlist:
          type: array
          items:
            $ref: '#/components/schemas/BookListDto'
        readBooks:
          type: array
          items:
            $ref: '#/components/schemas/BookListDto'
    PostListDto:
      type: object
      properties:
        postId:
          type: integer
          format: int64
        title:
          type: string
        authorNickname:
          type: string
        hit:
          type: integer
        likeCount:
          type: integer
        createdAt:
          type: string
          format: date-time
    PostDetailDto:
      type: object
      properties:
        postId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        authorNickname:
          type: string
        hit:
          type: integer
        likeCount:
          type: integer
        isSpoiler:
          type: boolean
        warnings:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
    CommentDto:
      type: object
      properties:
        commentId:
          type: integer
          format: int64
        authorNickname:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    BookListDto:
      type: object
      properties:
        bookId:
          type: integer
          format: int64
        bookname:
          type: string
        authors:
          type: string
        publisher:
          type: string
        bookImageUrl:
          type: string
    BookReviewDto:
      type: object
      properties:
        reviewId:
          type: integer
          format: int64
        content:
          type: string
        rating:
          type: integer
        authorNickname:
          type: string
        createdAt:
          type: string
          format: date-time
    BookHighlightDto:
      type: object
      properties:
        highlightId:
          type: integer
          format: int64
        content:
          type: string
        pageNumber:
          type: integer
    BookReviewRequestDto:
      type: object
      required:
        - content
        - rating
      properties:
        content:
          type: string
        rating:
          type: integer
    CalendarEventDto:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        allDay:
          type: boolean
    CalendarEventRequestDto:
      type: object
      required:
        - title
        - startsAt
        - endsAt
      properties:
        title:
          type: string
        description:
          type: string
        startsAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time
        allDay:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT